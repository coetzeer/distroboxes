name: Build and Push open-office container

# Trigger workflow on push to main, manual dispatch, and nightly schedule
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*' 
  # schedule:
  #   # Run at 2 AM UTC every day
  #   - cron: '0 2 * * *'
  workflow_dispatch: # Allows manual trigger


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: build
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform:
          - linux/amd64 # Only build for amd64 platform
    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx for advanced build features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      # Extract Docker image metadata (tags, labels)
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/open-office
          tags: |
            type=schedule,pattern=nightly
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./open-office
          push: ${{ github.event_name != 'pull_request' }}          
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/open-office,push-by-digest=true,name-canonical=true,push=true

      # Export the image digest to a file
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          platform="${{ matrix.platform }}"
          echo "$digest" > "/tmp/digests/${platform//\//-}.digest"

      # Upload digest file as artifact
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*.digest
          if-no-files-found: error

  # merge:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-and-push
  #   steps:
  #     # Download digest artifacts from previous job
  #     - name: Download digests
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: /tmp/digests
  #         name: digests

  #     # Set up Docker Buildx for manifest creation
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     # Extract Docker image metadata (tags, labels)
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ghcr.io/${{ github.repository_owner }}/open-office
  #         tags: |
  #           type=schedule,pattern=nightly
  #           type=raw,value=latest,enable={{is_default_branch}}

  #     # Login to GitHub Container Registry
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GH_TOKEN }}


  #     - name: Create manifest list and push
  #       working-directory: /tmp/digests
  #       run: |
  #         digests=$(ls *.digest | xargs -I{} cat {})
  #         tag_args=""
  #         for tag in ${{ steps.meta.outputs.tags }}; do
  #           tag_args="$tag_args -t $tag"
  #         done
  #         docker buildx imagetools create $tag_args $(for digest in $digests; do echo -n "ghcr.io/${{ github.repository_owner }}/open-office@${digest} "; done)

  #     # Inspect the final image manifest
  #     - name: Inspect image
  #       run: |
  #         docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/open-office:${{ steps.meta.outputs.version }}